version: "3.9"

services:
  # Postgres
  postgres:
    image: postgres:13.9
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    command: postgres -c wal_level=logical

  # Zookeeper
  zookeeper:
    image: quay.io/debezium/zookeeper:2.0
    container_name: zookeeper
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    
  # Kafka Broker
  kafka:
    image: quay.io/debezium/kafka:2.0
    container_name: kafka
    ports:
      - 29092:9092
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181

  # Debezium
  debezium:
    image: quay.io/debezium/connect:2.0
    container_name: debezium
    ports:
      - 8083:8083
    depends_on:
      - kafka
      - postgres
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses

  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 18081:8080
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=2181
      - KAFKA_CLUSTERS_0_READONLY=false

  # Debezium UI
  debezium-ui:
    image: debezium/debezium-ui:2.0
    container_name: debezium-ui
    depends_on:
      - debezium
    ports:
      - 18082:8080
    environment:
      - KAFKA_CONNECT_URIS=http://debezium:8083

  # Consumer Node
  consumer-node:
    volumes:
      - ./consumer-node:/opt/app
    build:
      context: ./consumer-node
    container_name: consumer-node
    depends_on:
      - kafka
      - debezium
    env_file:
      - consumer-node/.env
    command: npm run dev
